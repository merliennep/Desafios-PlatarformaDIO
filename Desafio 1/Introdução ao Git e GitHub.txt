    • O que é Git?
    
        É um sistema, um terminal que permite realizar o controle das versões do nosso sistema, seu armazenamento é em nuvem, compartilhar o projeto todo ou parte dele com outras pessoas, melhorar o seu código e ganhar reconhecimento. 
        
    • O que é GitHub?
    
        É uma plataforma de hospedagem, mais utilizada entre os desenvolvedores web. Pode ser utilizado para criar notas, diário, caderno de receitas, estudos, infinidades de opções.
        
    • Link para instalação do Git:
    
        Sistema operacional Windowns: https://git-scm.com/download/win
        
        Sistema operacional Linux: https://git-scm.com/download/linux
        
       Sistema operacional Mac: https://git-scm.com/download/mac
        
    • Link para instalação do GitHub:
        
        Tem a versão web e tem as versões Desktop, Android e IOS:
    
        Desktop: https://desktop.github.com/
        
        Sistema Android: https://play.google.com/store/apps/details?id=com.github.android&hl=en_US&gl=US
        
        Sistema IOS: https://apps.apple.com/us/app/github/id1477376905
        
    • Como criar seu primeiro repositório?
    
       https://docs.github.com/pt/get-started/quickstart/create-a-repo
       
    • Comandos mais usados no GitHub:
        
        1. git clone - comando para baixar o código-fonte existente de um repositório remoto;
        
                                git clone <https://link-com-o-nome-do-repositório>
                                
        2. git branch - as branches, vários desenvolvedores conseguem trabalhar em paralelo no mesmo projeto simultaneamente. Usado para criar, listar e excluir as branches;
                                git branch <nome-da-branch>
                                
            2.1 Criando uma branch: git push -u <local-remoto> <nome-da-branch>;
        
            2.2 Visualizar uma branch: git branch ou git branch --list;
        
            2.3 Excluir uma branch: git branch -d <nome-da-branch>;
        
        3. git checkout - usado na maioria dos casos, para trocar de uma branch para outra. Também podemos usar o comando para fazer o checkout de arquivos e commits;
                                git checkout <nome-da-branch>
                                
            3.1 permite criar e automaticamente trocar para a branch criada ao mesmo tempo;
                                
                                git checkout -b <nome-da-branch>
        
        4. git status - nos dá todas as informações necessárias sobre a branch atual;
        
        5. git add - para incluir as alterações de um ou vários arquivos em nosso próximo commit;
        
                                git add <arquivo>
                                
            5.1 Adicionar tudo ao mesmo tempo: git add .
        
        6. git commit - é como definir um ponto de verificação no processo de desenvolvimento. Você pode voltar a esse ponto mais tarde, se necessário;
                                
                                git commit -m "mensagem do commit"
       
        7. git push - faz o upload dos seus commits no repositório remoto;
        
                                git push <repositório-remoto> <nome-da-branch>
        
            7.1 Com a branch recém-criada, também é preciso fazer o upload da branch: git push -u origin <nome-da-branch>
        
        8. git pull - usado para obter as atualizações de um repositório remoto;
        
                                git pull <repositório-remoto>
                                
        9. git revert - desfará o commit especificado, mas criará outro commit sem excluir o antigo;
        
                                git log -- oneline e depois git revert <código hash ao lado do commit que se deseja desfazer>
        
        10. git merge - integra sua branch com o recurso e todos os seus commits na branch de desenvolvimento (dev) ou na branch principal (master ou main);
        
                                git merge <nome-da-branch-com-o-recurso>
    
    • Documentação para usar na formatação do README:
        
        Link: https://www.markdownguide.org/basic-syntax/
